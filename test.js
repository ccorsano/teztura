// Generated by CoffeeScript 1.6.3
var Test, t, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Test = (function(_super) {
  __extends(Test, _super);

  function Test() {
    _ref = Test.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Test.prototype.defaults = function() {
    return {
      prop: 'hi'
    };
  };

  Test.prototype.print = function() {
    return console.log(this.get('prop'));
  };

  return Test;

})(Backbone.Model);

t = new Test();

t.print();

t.set('prop', 'hey');

t.print();
