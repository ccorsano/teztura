// Generated by CoffeeScript 1.6.3
var $mainCanvas, bfunc, brush, brushLayer, changeGamma, drawing, gamma, getMainContext, getPenPressure, height, layer, offset, onDraw, refresh, scale, screenToCanvas, width;

$mainCanvas = $('#canvas');

width = $mainCanvas.width();

height = $mainCanvas.height();

drawing = false;

gamma = 1.0;

layer = new Layer(width, height);

offset = new Vector(0, 0);

scale = 1;

brush = new StepBrush();

brush.stepSize = 4;

brushLayer = new Layer(32, 32);

fillLayer(brushLayer, getRoundBrushFunc(0.8));

bfunc = genBlendFunc("intensity", "{dst} += {src} * intensity");

brush.drawStep = function(layer, pos, intensity, rect) {
  var r;
  r = new Rect(pos.x - brushLayer.width * 0.5, pos.y - brushLayer.height * 0.5, brushLayer.width, brushLayer.height).round();
  bfunc(r.topLeft(), brushLayer, layer, intensity * 0.1);
  return rect.extend(r);
};

getMainContext = function() {
  return $mainCanvas[0].getContext('2d');
};

getPenPressure = function() {
  var penAPI, plugin;
  plugin = document.getElementById('wtPlugin');
  penAPI = plugin.penAPI;
  if (penAPI && penAPI.pointerType > 0) {
    return penAPI.pressure;
  }
  return 1.0;
};

screenToCanvas = function(pt) {
  return pt.sub(offset).scale(1.0 / scale);
};

onDraw = function(e) {
  var brushRects, brushX, brushY, layerRect, pos, pressure, rect, _i, _len, _results;
  brushX = e.pageX - $mainCanvas.position().left;
  brushY = e.pageY - $mainCanvas.position().top;
  pos = screenToCanvas(new Vector(brushX, brushY));
  pressure = getPenPressure();
  brushRects = [];
  layerRect = layer.getRect();
  rect = brush.draw(layer, pos, pressure).round().intersect(layerRect);
  if (!rect.empty()) {
    brushRects.push(rect);
  }
  if (true) {
    StepBrushyer(layer, brushRects, gamma);
    _results = [];
    for (_i = 0, _len = brushRects.length; _i < _len; _i++) {
      rect = brushRects[_i];
      _results.push(getMainContext().drawImage(layer.canvas, rect.x, rect.y, rect.width + 1, rect.height + 1, rect.x, rect.y, rect.width + 1, rect.height + 1));
    }
    return _results;
  }
};

changeGamma = function(value) {
  gamma = value;
  return refresh();
};

refresh = function() {
  renderLayer(layer, [new Rect(0, 0, width, height)], gamma);
  return getMainContext().drawImage(layer.canvas, 0, 0);
};

$mainCanvas.mouseup(function(e) {
  drawing = false;
  return brush.endStroke();
});

$mainCanvas.mousedown(function(e) {
  drawing = true;
  brush.beginStroke();
  return onDraw(e);
});

$mainCanvas.mousemove(function(e) {
  if (drawing) {
    return onDraw(e);
  }
});

getMainContext().setTransform(1, 0, 0, 1, 0, 0);

getMainContext().translate(offset.x, offset.y);

getMainContext().scale(scale, scale);

getMainContext().mozImageSmoothingEnabled = false;

$('#gammaSlider').slider({
  min: 0,
  max: 4,
  step: 0.01,
  value: gamma,
  change: function(evt, ui) {
    return changeGamma(ui.value);
  }
});

fillLayer(layer, function(x, y) {
  return -0.2;
});

refresh();

fillLayer(layer, function(x, y) {
  return -1;
});
