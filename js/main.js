// Generated by CoffeeScript 1.6.3
var $mainCanvas, changeGamma, drawing, gamma, getMainContext, getPenPressure, height, layer, offset, onDraw, refresh, width;

$mainCanvas = $('#canvas');

width = $mainCanvas.width();

height = $mainCanvas.height();

drawing = false;

gamma = 1.0;

layer = new Layer(width, height);

offset = new Vector(50, 30);

getMainContext = function() {
  return $mainCanvas[0].getContext('2d');
};

getPenPressure = function() {
  var penAPI, plugin;
  plugin = document.getElementById('wtPlugin');
  penAPI = plugin.penAPI;
  if (penAPI && penAPI.pointerType > 0) {
    return penAPI.pressure;
  }
  return 1.0;
};

onDraw = function(e) {
  var brushH, brushRect, brushW, brushX, brushY, fb, i, ix, iy, pressure, _i, _j;
  brushX = e.pageX - $mainCanvas.position().left - offset.x;
  brushY = e.pageY - $mainCanvas.position().top - offset.y;
  brushW = 30;
  brushH = 20;
  pressure = getPenPressure();
  fb = layer.getBuffer();
  for (ix = _i = 0; 0 <= brushW ? _i <= brushW : _i >= brushW; ix = 0 <= brushW ? ++_i : --_i) {
    for (iy = _j = 0; 0 <= brushH ? _j <= brushH : _j >= brushH; iy = 0 <= brushH ? ++_j : --_j) {
      i = brushX + ix + (brushY + iy) * width;
      fb[i] += pressure * 0.2;
    }
  }
  brushRect = [brushX, brushY, brushW + 1, brushH + 1];
  drawLayer(layer, [brushRect], gamma);
  return getMainContext().drawImage(layer.canvas, brushRect[0], brushRect[1], brushRect[2], brushRect[3], offset.x + brushRect[0], offset.y + brushRect[1], brushRect[2], brushRect[3]);
};

changeGamma = function(value) {
  gamma = value;
  return refresh();
};

refresh = function() {
  drawLayer(layer, [[0, 0, width, height]], gamma);
  return getMainContext().drawImage(layer.canvas, offset.x, offset.y);
};

$mainCanvas.mouseup(function(e) {
  return drawing = false;
});

$mainCanvas.mousedown(function(e) {
  drawing = true;
  return onDraw(e);
});

$mainCanvas.mousemove(function(e) {
  if (drawing) {
    return onDraw(e);
  }
});

$('#gammaSlider').slider({
  min: 0,
  max: 4,
  step: 0.01,
  value: gamma,
  change: function(evt, ui) {
    return changeGamma(ui.value);
  }
});

fillLayer(layer, function(x, y) {
  return Math.sin(x * y * 10);
});

refresh();
