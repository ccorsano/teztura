// Generated by CoffeeScript 1.6.3
var App, doc;

App = Ember.Application.create({
  LOG_TRANSITIONS: true,
  LOG_ACTIVE_GENERATION: true
});

Ember.LOG_BINDINGS = true;

Ember.LOG_VIEW_LOOKUPS = true;

Ember.ENV.RAISE_ON_DEPRECATION = true;

App.Router.map(function() {
  return this.resource('editor', {
    path: '/'
  });
});

App.DocumentController = Ember.Controller.extend({
  drawing: false,
  context: null,
  layer: null,
  dirtyRects: null,
  startDrawing: function() {
    this.set("drawing", true);
    return console.log("start drawing");
  },
  stopDrawing: function() {
    this.set("drawing", false);
    return console.log("stop drawing");
  },
  mouseMove: function(x, y) {
    if (this.get('drawing')) {
      return console.log("drawing");
    }
  }
});

App.DocumentView = Ember.View.extend({
  templateName: 'document-view',
  context: null,
  dirtyRectsChanged: (function() {
    var rects;
    rects = this.get('controller.dirtyRects');
    if (rects != null) {
      renderRects(rects);
    }
    return this.get('controller').set('dirtyRects', null);
  }).observes('controller.dirtyRects'),
  renderRects: function(rects) {
    var ctx, layer, rect, _i, _len, _results;
    ctx = this.get('context');
    layer = this.get('controller.layer');
    _results = [];
    for (_i = 0, _len = rects.length; _i < _len; _i++) {
      rect = rects[_i];
      _results.push(ctx.drawImage(layer.canvas, rect.x, rect.y, rect.width + 1, rect.height + 1, rect.x, rect.y, rect.width + 1, rect.height + 1));
    }
    return _results;
  },
  didInsertElement: function() {
    var $canvas, context, layer, self;
    self = this;
    layer = this.get('controller.layer');
    $canvas = $('<canvas/>', {
      'class': ''
    }).attr({
      width: layer.width,
      height: layer.height
    });
    this.$().addClass('document-view');
    this.$().append($canvas);
    context = $canvas[0].getContext('2d');
    context.fillRect(10, 10, 10, 10);
    this.get('controller').set('context', context);
    self.$().mousedown(function(e) {
      e.preventDefault();
      if (e.which === 1) {
        return self.get('controller').send('startDrawing');
      }
    });
    self.$().mouseup(function(e) {
      if (e.which === 1) {
        return self.get('controller').send('stopDrawing');
      }
    });
    self.$().mousemove(function(e) {
      var x, y;
      x = e.pageX - $canvas.position().left;
      y = e.pageY - $canvas.position().top;
      if (e.which === 1) {
        return self.get('controller').send('mouseMove', x, y);
      }
    });
  }
});

doc = App.DocumentController.create({
  layer: new Layer(512, 512)
});

App.EditorRoute = Ember.Route.extend({
  model: function() {
    return {
      document: doc
    };
  }
});
